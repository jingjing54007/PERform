<UserControl x:Class="PERform.Views.SnippetsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviours="clr-namespace:PERform.Models"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:models="clr-namespace:PERform.Models"
             xmlns:converters="clr-namespace:PERform.Utilities.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <converters:StringLengthToBoolean x:Key="StringLengthToBoolean"/>
        <converters:InvertBoolean x:Key="InvertBoolean"/>
        <converters:InverVisibility x:Key="InvertVisibility"/>
    </UserControl.Resources>

    <materialDesign:DialogHost IsOpen="{Binding DialogIsOpen}">
        <materialDesign:DialogHost.DialogContent>
            <StackPanel Margin="15">
                <TextBlock x:Name="DialogTextBlock" Text="{Binding DialogTextBlockText}"/>
                <TextBox x:Name="DialogTextBox" Text="{Binding DialogTextBoxText}" ToolTip="Node name" Visibility="{Binding DialogTextBoxVisibility}" Margin="0,10,0,10"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="Cancel" Command="{Binding CancelDialogCommand}" Margin="5"/>
                    <Button Content="Confirm" Command="{Binding ConfirmDialogCommand}" Margin="5" Visibility="{Binding DialogTextBoxVisibility}" IsEnabled="{Binding ElementName=DialogTextBox, Path=Text, Converter={StaticResource StringLengthToBoolean}}"/>
                    <Button Content="Delete" Command="{Binding ConfirmDialogCommand}" Margin="5" Visibility="{Binding DialogTextBoxVisibility, Converter={StaticResource InvertVisibility}}"/>
                </StackPanel>
            </StackPanel>
        </materialDesign:DialogHost.DialogContent>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="8*"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="10,10,0,10">
                <TreeView ItemsSource="{Binding SnippetsManager.SnippetsCollection}" x:Name="SnippetTree" Height="Auto">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate  DataType="{x:Type models:SnippetParent}" ItemsSource="{Binding Childrens}">
                            <TextBlock Text="{Binding Header}"/>
                        </HierarchicalDataTemplate>
                        <HierarchicalDataTemplate  DataType="{x:Type models:SnippetChild}">
                            <TextBlock Text="{Binding Header}"/>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                    <i:Interaction.Behaviors>
                        <behaviours:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </i:Interaction.Behaviors>

                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add" Command="{Binding AddSnippetCommand}" CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Plus"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Rename" Command="{Binding RenameSnippetCommand}" CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="TableEdit"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Delete" Command="{Binding DeleteSnippetCommand}" CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Delete"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TreeView.ContextMenu>
                </TreeView>
            </ScrollViewer>
            <ContentControl Content="{Binding SelectedItem, ElementName=SnippetTree}" Grid.Column="1">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type models:SnippetParent}">
                        <ContentControl Content="{Binding PerEditor}"/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type models:SnippetChild}">
                        <ContentControl Content="{Binding PerEditor}"/>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
        </Grid>
    </materialDesign:DialogHost>

</UserControl>
